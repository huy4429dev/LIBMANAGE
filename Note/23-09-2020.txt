- Admin page 

- Login

- lắp template / với trang quản trị thì mình dùng template 

- folder wwwroot là thư mục public của 1 project 

netcore 

--> thì ở đây chúng ta sẽ để những file mà user 

có thể truy cập dc 

như js / css / images /... 

mặc định để cái config kia thì nó sẽ cho phép 

truy cập vào thư mục wwwroot
sử dụng file tĩnh [css/html/js ...] 


1 chuc nang 

--> controller / model / view 

ở  đây các page này đều dùng chung file css kia 

thì mình sẽ 

--> tí nữa sẽ chia lay outt 

thành header 

	  và footer 

khi login xong thi no se vao trang dashboard 


---> đối với trang quản trị thì chỉ có phần main 
thay đổi 

nên mình sẽ làm 1 layout 

để tái sử dụng những thằng còn lại 


kiểu như là ở layoutAdmin 

chúng ta sẽ bỏ 1 cái khung 

gồm 

header 

navbar 

footer hi
 

thì chỉ có phần main là thay đổi 

- trang dashboard 

- trang quản lý sách 

hiêu chứ mọi người 

kiểu như những thằng con 

sẽ kế thừa từ thằng _layoutAdmin 

thôi 

chỉ thay đổi phần main 

kiểu thế 

alo hiểu chứ 

ok

- tương tự 

các page còn lại 

- làm thì tạo controller 
--> return về view cần 

     <title>Admin - @ViewBag.Title</title>

thằng này có nghĩa là 

đổi title của từng page



            @if(IsSectionDefined("Css"))
            {
                @RenderSection("Css", required:true)
            }
					
				khúc này có nghĩ là cho phép những thằng 
				
				con có thể tạo thêm code css 
				
				chẳng hạn tất nhiên thì ghi cái gì vào đây 
				
				cũng được 
				
		
nó sẽ nằm ở vi tri minnh dinh nghia 

tuong tu voi thang Scrip o duoi 

          @RenderBody()
		  
		  
	--> chinh là cái nội dung chúng ta đặt 
	
	vào mà ko cần dùng section j cả 
	
	nó sẽ nằm ở vị trí đặt tag @renderBody 
	
	
	
	--> ok vậy là mình đã ghép xong giao diện 
	
	admin 
	
	--> hiểu cả chứ 
	
	k nhé 
	
	important nó là 1 thuộc tính thôi 
	
	
	nhưng mà 
	
	nó sẽ ăn css bạn đặt vào đó 
	
	bởi vì 
	
	nó nằm sau file style.css mà 
	
	ở đây là inline style 
	
	
	nói chung bạn muốn sửa css 
	
	j ghi vào đây 
	
	còn gì nữa k ? 
	
	oke xem lại là hiểu 
	

II. Login 

--> check username và password 

--> có trong db thì chuyển hướng đến dashboard 

                   <form method="POST" action="/admin/login">
				   
				   như này nó sẽ gọi thằng này 
				   
	
--> name input -> username 
               -> password 
			   
			   -> submit form 
			   lay username va password 
			   
   [HttpPost("admin/login")]
        public IActionResult Login([FromForm] LoginViewModel model){
            
            string UserName = model.UserName;
            string Password = model.Password;

            return Ok($"Muc tieu la lay password: {Password} va UserName tu Form Login: {UserName}");
      }		 
	
	
	FromForm --> lay data tu form 
	
	mình tạo ViewModels --> loginViewModel 
	
	để map dữ liệu từ form lên thằng method 
	
	login để dùng nó thôi 
	
	F5 chạy debug -> tắt dotnet watch run để 
	chạy 
	
	F11 -> NEXT
	
	f5 -> continue đến break point tiếp theo
	