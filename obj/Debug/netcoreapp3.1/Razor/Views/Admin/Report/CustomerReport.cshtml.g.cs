#pragma checksum "C:\Users\HUY 4\Desktop\C#\LibManage\Views\Admin\Report\CustomerReport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b2bdd5fc1ffcf0d77125be5aabbb2e2b675d2fd4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Report_CustomerReport), @"mvc.1.0.view", @"/Views/Admin/Report/CustomerReport.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\_ViewImports.cshtml"
using LibManage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\_ViewImports.cshtml"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\_ViewImports.cshtml"
using LibManage.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\_ViewImports.cshtml"
using LibManage.Extension;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\Admin\Report\CustomerReport.cshtml"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\Admin\Report\CustomerReport.cshtml"
using LibManage.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b2bdd5fc1ffcf0d77125be5aabbb2e2b675d2fd4", @"/Views/Admin/Report/CustomerReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bbe79261a8952a09445f81073330574e8f71484e", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Report_CustomerReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\Admin\Report\CustomerReport.cshtml"
  
    Layout = "_LayoutAdmin";
    ViewBag.Title = "DOANH SỐ";
    ViewBag.PageName = "BÁO CÁO TƯƠNG TÁC KHÁCH HÀNG";
    ViewBag.Link = "/admin/report/order";
    var user = ViewData["User"] as User;
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\Admin\Report\CustomerReport.cshtml"
                                                                            
    var dataChart  = new List<object>();
 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""d-flex justify-content-end"">
    <div>
        <div class=""form-group"">
            <input class=""form-control"" type=""text"" name=""daterange"" value=""12/01/2020 - 12/12/2020"" />
        </div>
    </div>
</div>
<div class=""row mt-4"">
    <div class=""col-12"">
        <h5 class=""text-center mb-5"" style=""font-weight:400;font-size:20px; color: #414141"">
            Biểu đồ thống kê lượng tương tác khách hàng <br /> 
            <small>1/12/2020 - 12/12/2020</small> 
        </h5>
        <div class=""d-flex justify-content-center"">
            <figure class=""highcharts-figure"">
                <div id=""container""></div>
            </figure>
        </div>
    </div>
</div>
<div class=""row mt-4"">
    <table class=""table"">
        <thead>
            <tr>
                <th>Thời gian</th>
                <th>Lượt mượn</th>
                <th>Lượt trả đúng hạn</th>
                <th>Lượt trả trễ hạn</th>
                <th>Tiền nộp phạt</th>
                <th>Số sách m");
            WriteLiteral(@"ượn</th>
                <th>Số khách hàng</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>1/12/2020</td>
                <td>10</td>
                <td>11</td>
                <td>12</td>
                <td>12.000 đ</td>
                <td>10</td>
                <td>13</td>
            </tr>
            <tr>
                <td>2/12/2020</td>
                <td>10</td>
                <td>11</td>
                <td>12</td>
                <td>12.000 đ</td>
                <td>10</td>
                <td>13</td>
            </tr>
            <tr>
                <td>3/12/2020</td>
                <td>10</td>
                <td>11</td>
                <td>12</td>
                <td>12.000 đ</td>
                <td>10</td>
                <td>13</td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <th>Tổng</th>
                <td>10</td>
                <td>11</td>
                <td");
            WriteLiteral(">12</td>\r\n                <td>12.000 đ</td>\r\n                <td>10</td>\r\n                <td>13</td>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n</div>\r\n\r\n");
            DefineSection("Css", async() => {
                WriteLiteral("\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css\" />\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("Script", async() => {
                WriteLiteral(@"
    <script src=""https://code.highcharts.com/highcharts.js""></script>
    <script src=""https://code.highcharts.com/modules/export-data.js""></script>
    <script src=""https://code.highcharts.com/modules/accessibility.js""></script>
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/jquery/latest/jquery.min.js""></script>
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/momentjs/latest/moment.min.js""></script>
    <script type=""text/javascript"" src=""https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js""></script>
    <script>

Highcharts.chart('container', {
    chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
        type: 'pie',
        width: 400
    },
    title: {
        text: ''
    },
    tooltip: {
        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
    },
    accessibility: {
        point: {
            valueSuffix: '%'
        }
    },
    plotOptions: {
     ");
                WriteLiteral(@"   pie: {
            cursor: 'pointer',
            dataLabels: {
                enabled: true,
                format: '<b>{point.name}</b>: {point.percentage:.1f} %'
            }
        }
    },
    series: [{
        name: 'Loại khách hàng',
        colorByPoint: true,
        data: [{
            name: 'Khách hàng mới',
            y: 61.41,
        }, {
            name: 'Khách hàng cũ',
            y: 11.84
        }]
    }]
});

    </script>
    <script>

        var dataChart = '");
#nullable restore
#line 146 "C:\Users\HUY 4\Desktop\C#\LibManage\Views\Admin\Report\CustomerReport.cshtml"
                    Write(dataChart);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
      /*  dataChart = rhtmlspecialchars(dataChart);
        dataChart = JSON.parse(dataChart);

        function generateListDay(firstDay,countDay){
            let listDays = [firstDay];
            let i = 1;

            while(i < countDay) {

                firstDay = firstDay.addDays(1);
                listDays.push(firstDay);
                i ++;   
            }

            return  listDays;
        } 


        let categories = generateListDay(FIRST_DAY_OF_WEEK, 7).map(day => formatDate(day));

        function mapDateChart(data,categories) {
                return categories.map(c => {
                    let found = data.filter(d =>  d.Key.substring(0,d.Key.indexOf('T')) == c) ?? [];
                    if(found[0])
                    {
                        return found[0].Count;
                    }
                    return 0;
                });
        } 

    

        Highcharts.chart('container', {
            chart: {
                type: 'li");
                WriteLiteral(@"ne'
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: categories.map(d => formatDateVN(d)),
                tickmarkPlacement: 'on',
                title: {
                    enabled: true
                }
            },
            yAxis: {
                title: {
                    text: 'Số lượng'
                },
                labels: {
                    formatter: function () {
                        return this.value / 1000;
                    }
                }
            },
            tooltip: {
                split: true
            },
            plotOptions: {
                area: {
                    stacking: 'normal',
                    lineColor: '#666666',
                    lineWidth: 1,
                    marker: {
                        lineWidth: 1,
                        lineColor: '#666666'
");
                WriteLiteral(@"                    }
                }
            },
            series: [{
                name: 'Sách mượn',
                data:  mapDateChart(dataChart.TotalBook_MuonPerWeek, categories)

            }, {
                name: 'Sách đến hạn trả',
                data:  mapDateChart(dataChart.TotalBook_Phai_Tra_PerMonth, categories)

            }, {
                name: 'Sách quá hạn trả',
                data:  mapDateChart(dataChart.TotalBook_Qua_Han_PerMoth, categories)
            }, {
                name: 'KH mới',
                data:  mapDateChart(dataChart.TotalNewCustomerPerWeek, categories)
            }]
        }); */
    </script>
    <script>
        $(function() {
        $('input[name=""daterange""]').daterangepicker({
            opens: 'left'
        }, function(start, end, label) {
            console.log(""A new date selection was made: "" + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
        });
        });
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
